AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  UtilsLayerArn:
    Type: String
    Description: ARN of the Utils layer

Globals:
  Function:
    Runtime: nodejs14.x
    MemorySize: 1024
    Timeout: 15
    Layers:
      - !Ref UtilsLayerArn

Resources:
  # Functions
Resources:
  GetOrders:
    Type: AWS::Serverless::Function
    DependsOn: GetOrdersLambdaExecutionRole
    Properties:
      FunctionName: GetOrders
      Handler: ./code/index.getOrders
      Role: !GetAtt GetOrdersLambdaExecutionRole.Arn
    
  UpsertOrder:
    Type: AWS::Serverless::Function
    DependsOn: UpsertOrderLambdaExecutionRole
    Properties:
      FunctionName: UpsertOrder
      Handler: ./code/index.upsertOrder
      Role: !GetAtt UpsertOrderLambdaExecutionRole.Arn
  
  DeleteOrder:
    Type: AWS::Serverless::Function
    DependsOn: DeleteOrderLambdaExecutionRole
    Properties:
      FunctionName: DeleteOrder
      Handler: ./code/index.deleteOrder
      Role: !GetAtt DeleteOrderLambdaExecutionRole.Arn

  # Roles
  GetOrdersLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: iot-get-orders-role
      Path: "/"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy    
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: iot-get-orders-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                - dynamodb:BatchGetItem
                - dynamodb:GetItem
                - dynamodb:Scan
                - dynamodb:Query
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Orders

  UpsertOrderLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: iot-upsert-order-role
      Path: "/"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy    
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: iot-upsert-order-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                - dynamodb:UpdateItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Orders
              - Effect: Allow
                Action:
                - dynamodb:getItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Products

  DeleteOrderLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: iot-delete-order-role
      Path: "/"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy    
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: iot-delete-order-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                - dynamodb:DeleteItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Orders